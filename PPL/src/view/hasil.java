/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.TextArea;
import javax.swing.JButton;
import javax.swing.JTextArea;

/**
 *
 * @author JEE
 */
public class hasil extends javax.swing.JFrame {

    /**
     * Creates new form hasil
     */
    public hasil() {
        initComponents();
    }

    public JTextArea getHasil() {
        return hasil_tx;
    }

    public JButton getHome() {
        return kembali_btn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hasil_tx = new javax.swing.JTextArea();
        kembali_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("HASILNYA ADALAH");

        hasil_tx.setEditable(false);
        hasil_tx.setColumns(20);
        hasil_tx.setLineWrap(true);
        hasil_tx.setRows(5);
        hasil_tx.setText("CVPD\nApa Itu CVPD dan Mengapa Penting?\nCVPD adalah nama penyakit jeruk, singkatan dari Citrus Vein Phloem Degeneration. Dalam bahasa Indonesia nama ini berarti kerusakan pembuluh floem tanaman jeruk. Di luar negeri penyakit ini dikenal dengan nama berbeda-beda di setiap negara. Nama CVPD sendiri, meskipun dalam bahasa Inggris, adalah nama yang digunakan di Indonesia. Nama resmi yang kini digunakan di seluruh dunia adalah huanglongbing, disingkat HLB, nama dalam bahasa Mandarin yang berarti pucuk menguning.\nPembuluh floem adalah pembuluh yang terdapat pada kulit batang, berfungsi untuk mengangkut bahan makanan, yang diolah tanaman pada daun, ke seluruh bagian tanaman. Jika pembuluh floem mengalami keru-sakan maka bahan makanan tertumpuk pada daun sehingga bagian lainnya mengalami kekurangan makanan. Akibatnya, pertumbuhan tanaman me-rana dan tanaman menjadi mati secara pelan-pelan tetapi pasti. Pembuluh floem mengalami kerusakan karena dijadikan tempat berkembang biak oleh bakteri Candidatus Liberibacter asiaticus, penyebab penyakit CVPD.\nPenyakit ini merupakan penyakit yang sangat ditakuti oleh petani jeruk di seluruh dunia. Banyak pusat produksi jeruk di Indonesia telah dirusakkan oleh CVPD, demikian juga pusat produksi jeruk di negara-negara lain. Penyakit ini ditakuti karena mudah menular dan begitu tanaman terkena penyakit maka akhirnya pasti akan mati. Selama masih hidup tanaman memang masih dapat berproduksi, tetapi buah jeruk menjadi berkurang, bentuk buah menjadi tidak normal, ukuran buah menjadi lebih kecil, dan rasanya menjadi kecut.\n\nB.      Bagaimana Tanaman Jeruk Bisa Terkena CVPD?\nTanaman jeruk dapat terkena CVPD melalui salah satu dari dua cara penularan CVPD. Pertama, CVPD dapat menular dengan perantaraan serangga kutu loncat jeruk Asia sebagai vektor. Mengenai kutu loncat jeruk Asia ini akan diuraikan pada brosur tersendiri. Kedua, melalui okulasi dengan menggunakan mata tempel yang diambil dari pohon induk berpenyakit CVPD.\nVektor adalah mahluk hidup yang tubuhnya mengandung bibit penyakit tanpa harus menjadi sakit, seperti nyamuk Anopeles yang tubuh-nya dapat mengandung plasmodium tanpa harus menjadi sakit malaria atau nyamuk Aedes yang tidak perlu khawatir terkena penyakit demam ber-darah dongue (DBD). Ketika kutu loncat jeruk Asia mengisap cairan dari pucuk tanaman berpenyakit CVPD, cairan yang mengandung bakteri penyebab CVPD masuk ke dalam tubuhnya. Cairan tersebut dapat dipin-dahkan ke tanaman sehat pada saat kutu loncat tersebut menghisap cairan dari tanaman sehat.\n\nC.     Bagaimana Mengenali CVPD?\nCPVD dapat dikenali dengan beberapa cara, dari cara yang seder-hana sampai cara yang canggih. Cara sederhana biasanya kurang teliti, tetapi biayanya murah dan bila dilakukan oleh orang yang berpengalaman, hasilnya bisa mendekati cara canggih yang biayanya mahal. Dua cara sederhana untuk mengenali CVPD adalah pengamatan gejala dan uji iodin. Pengamatan gejala adalah pengamatan yang dilakukan untuk melihat per-ubahan yang terjadi pada tanaman yang menderita CVPD, sedangkan uji iodin adalah uji yang dilakukan dengan meneteskan cairan iodium pada irisan daun yang diambil dari tanaman sakit.\nCVPD menimbulkan beberapa gejala khas yang dapat digunakan untuk mengenali keberadaannya. Pada tanaman yang baru mulai menderita CVPD, salah satu cabangnya akan tampak menguning (Gb. 1). Daun pada cabang tersebut tampak berbelang-belang hijau-kuning secara tidak simetris antara bagian kanan dan kiri tulang daun utama (Gb. 2). Daun-daun kemudian akan mempunyai tulang daun yang lebih tebal dan ber-gabus, bagian daun menguning yang semakin mencakup seluruh permuka-an daun, serta daun menjadi lebih kaku, tumbuh lebih tegak, dan kadang-kadang berbentuk tidak normal . Lama kelamaan, daun gugur dan cabang menjadi tumbuh meranggas, tanaman tampak tumbuh merana, sebelum akhirnya tanaman mati .\n\nGejala belang hijau-kuning pada daun mirip dengan gejala keku-rangan unsur hara dan gejala hama-penyakit lain. Namun bila dilakukan pengamatan dengan teliti maka akan ditemukan perbedaannya sebagai-mana tampak pada Gb. 5-Gb. 8. Mengingat hal ini, pengenalan penyakit CVPD dengan berdasarkan gejala sebaiknya tidak dilakukan terhadap tanaman yang sudah sakit parah dan tidak dilakukan pada musim kemarau ketika tanaman tidak dalam keadaan segar.\n\n \n\t \n\nGb. 5. Defisiensi Besi (Fe)\tGb. 6. Defisiensi Seng (Zn)\n \n\t \n\nGb. 7. Defisiensi Mangan (Mn)\tGb. 8. Defisiensi Magnesium (Mg)\n\nBuah tanaman yang menderita CVPD berukuran lebih kecil dan berbentuk tidak normal (Gb. 9). Menjelang masak, buah menguning dari bagian pangkal (Gb. 10 dan Gb. 11), bukan dari bagian ujung sebagaimana seharusnya. Bila buah dibelah melalui bagian pangkal, tampak pembuluh berwarna cokelat muda (Gb. 12). Bila buah dibelah melintang, tampak biji yang kisut dan menghitam (Gb. 13).\n\n \n\t \n\nGb. 9. Buah berukuran dan berbentuk tidak normal\tGb. 10. Buah jeruk keprok menguning dari pangkal\n \n\n\t \n\t \n\nGb. 11. Buah jeruk manis menguning\tGb. 12. Pembuluh berwarna cokelat muda\tGb. 13. Biji kisut dan menghitam\n\nPada tanaman yang sudah sakit parah, gejala CVPD sangat sulit dapat dikenali. Untuk lebih memastikan tanaman menderita CPVD, dapat dilakukan uji sederhana yang dikenal dengan uji iodin. Untuk melakukan uji ini, terlebih dahulu perlu disiapkan larutan iodin dengan mencampurkan 1 bagian cairan iodium tinktur (obat merah Betadine tidak boleh digunakan) ke dalam 9 bagian air minum kemasan (1:9). Kemudian, diambil satu helai daun bergejala CVPD dan diiris seperti tampak pada Gb. 14. Irisan daun kemudian dicelupkan ke dalam larutan iodin selama 1,5 sampai 2 menit lalu diperhatikan perubahan warna yang terjadi pada bagian tepi irisan daun. Bila warna tepi irisan berubah menjadi biru gelap maka perubahan warna tersebut menandakan tanaman berpenyakit CVPD (Gb. 15), sebaliknya bila warna tidak berubah menandakan tanaman sehat (Gb. 16). Bila perubahan warna kurang jelas (Gb. 17), uji diulangi dengan membuat irisan baru dari daun lain sampai diperoleh hasil seperti pada Gb. 15 atau Gb. 16.\n\n\n \n\n\t \n\nGb. 14. Cara memotong daun untuk pelaksanaan uji iodin\tGb. 15. Tepi potongan daun berwar-na biru gelap bila berpenyakit CVPD\n \n\t \n\nGb. 16. Tepi potongan daun tidak berwarna biru gelap bila tidak ber-penyakit CVPD (sehat)\tGb. 17. Tepi potongan daun berwar-na biru gelap sebagian-sebagian, uji perlu diulang\n\nPengenalan CVPD dengan menggunakan gejala dan uji iodin memang tidak dapat memberikan hasil yang benar-benar akurat. Namun karena biayanya murah maka dapat dilakukan dalam jumlah banyak, di-bandingkan misalnya dengan uji canggih yang biayanya mahal. Mengingat tingkat akurasi uji iodin adalah 65% maka bila dari 100 pengujian ditemu-kan 80 hasil positif, setidak-tidaknya 52 pengujian adalah akurat. Untuk hasil yang benar-benar akurat dapat dilakukan uji PCR (polimerase chain reaction), tetapi uji ini hanya dapat dilakukan di laboratorium di luar NTT. Bukan tidak mungkin selama pengangkutan ke laboratorium sampel meng-alami kerusakan sehingga hasilnya juga dapat tidak benar-benar akurat.\n\n\n\n\n\n\n\n\n");
        hasil_tx.setWrapStyleWord(true);
        hasil_tx.setAutoscrolls(false);
        jScrollPane1.setViewportView(hasil_tx);

        kembali_btn.setText("OK");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(kembali_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(kembali_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hasil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea hasil_tx;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kembali_btn;
    // End of variables declaration//GEN-END:variables
}
